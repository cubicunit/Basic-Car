//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/DriverInputControl.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DriverInputControl : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DriverInputControl()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DriverInputControl"",
    ""maps"": [
        {
            ""name"": ""PlayerCar"",
            ""id"": ""5d3bf933-5ea3-4bdc-b68b-4849a5c37b9f"",
            ""actions"": [
                {
                    ""name"": ""Horiontal"",
                    ""type"": ""Button"",
                    ""id"": ""523732d5-4779-4805-bd61-aa7aaf261d37"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Vertical"",
                    ""type"": ""Button"",
                    ""id"": ""abc33870-d968-4fd6-86da-f16e3577f4bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GearShift"",
                    ""type"": ""Button"",
                    ""id"": ""9135d4a5-015c-4920-8966-b4b0409b2cd6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""AD"",
                    ""id"": ""d5b86d4e-28de-46f9-99b2-1bbbdfe490ad"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horiontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""3acc19ca-3e58-4500-917c-ba6a73e819a0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horiontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""df9c13bc-5394-4915-972f-dcfe299f284f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horiontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""b1fe1394-57d5-4e35-b9b5-7bca558c684a"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2bdcc706-ea06-4932-80f8-b9dca9b4fa04"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""67e5e948-fda2-43e8-a70d-b2e0430d7a95"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Button With One Modifier"",
                    ""id"": ""873e11ca-832a-4304-ac0e-de8add30f9ae"",
                    ""path"": ""ButtonWithOneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GearShift"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Modifier"",
                    ""id"": ""c3c31ebd-4793-46f9-b7c4-33bcd941e12d"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GearShift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Button"",
                    ""id"": ""059c3468-8754-4cb0-8c0b-5743eade260b"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GearShift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""New control scheme"",
            ""bindingGroup"": ""New control scheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<iOSGameController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PlayerCar
        m_PlayerCar = asset.FindActionMap("PlayerCar", throwIfNotFound: true);
        m_PlayerCar_Horiontal = m_PlayerCar.FindAction("Horiontal", throwIfNotFound: true);
        m_PlayerCar_Vertical = m_PlayerCar.FindAction("Vertical", throwIfNotFound: true);
        m_PlayerCar_GearShift = m_PlayerCar.FindAction("GearShift", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerCar
    private readonly InputActionMap m_PlayerCar;
    private IPlayerCarActions m_PlayerCarActionsCallbackInterface;
    private readonly InputAction m_PlayerCar_Horiontal;
    private readonly InputAction m_PlayerCar_Vertical;
    private readonly InputAction m_PlayerCar_GearShift;
    public struct PlayerCarActions
    {
        private @DriverInputControl m_Wrapper;
        public PlayerCarActions(@DriverInputControl wrapper) { m_Wrapper = wrapper; }
        public InputAction @Horiontal => m_Wrapper.m_PlayerCar_Horiontal;
        public InputAction @Vertical => m_Wrapper.m_PlayerCar_Vertical;
        public InputAction @GearShift => m_Wrapper.m_PlayerCar_GearShift;
        public InputActionMap Get() { return m_Wrapper.m_PlayerCar; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerCarActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerCarActions instance)
        {
            if (m_Wrapper.m_PlayerCarActionsCallbackInterface != null)
            {
                @Horiontal.started -= m_Wrapper.m_PlayerCarActionsCallbackInterface.OnHoriontal;
                @Horiontal.performed -= m_Wrapper.m_PlayerCarActionsCallbackInterface.OnHoriontal;
                @Horiontal.canceled -= m_Wrapper.m_PlayerCarActionsCallbackInterface.OnHoriontal;
                @Vertical.started -= m_Wrapper.m_PlayerCarActionsCallbackInterface.OnVertical;
                @Vertical.performed -= m_Wrapper.m_PlayerCarActionsCallbackInterface.OnVertical;
                @Vertical.canceled -= m_Wrapper.m_PlayerCarActionsCallbackInterface.OnVertical;
                @GearShift.started -= m_Wrapper.m_PlayerCarActionsCallbackInterface.OnGearShift;
                @GearShift.performed -= m_Wrapper.m_PlayerCarActionsCallbackInterface.OnGearShift;
                @GearShift.canceled -= m_Wrapper.m_PlayerCarActionsCallbackInterface.OnGearShift;
            }
            m_Wrapper.m_PlayerCarActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Horiontal.started += instance.OnHoriontal;
                @Horiontal.performed += instance.OnHoriontal;
                @Horiontal.canceled += instance.OnHoriontal;
                @Vertical.started += instance.OnVertical;
                @Vertical.performed += instance.OnVertical;
                @Vertical.canceled += instance.OnVertical;
                @GearShift.started += instance.OnGearShift;
                @GearShift.performed += instance.OnGearShift;
                @GearShift.canceled += instance.OnGearShift;
            }
        }
    }
    public PlayerCarActions @PlayerCar => new PlayerCarActions(this);
    private int m_NewcontrolschemeSchemeIndex = -1;
    public InputControlScheme NewcontrolschemeScheme
    {
        get
        {
            if (m_NewcontrolschemeSchemeIndex == -1) m_NewcontrolschemeSchemeIndex = asset.FindControlSchemeIndex("New control scheme");
            return asset.controlSchemes[m_NewcontrolschemeSchemeIndex];
        }
    }
    public interface IPlayerCarActions
    {
        void OnHoriontal(InputAction.CallbackContext context);
        void OnVertical(InputAction.CallbackContext context);
        void OnGearShift(InputAction.CallbackContext context);
    }
}
